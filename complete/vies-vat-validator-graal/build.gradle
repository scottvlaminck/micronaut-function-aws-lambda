buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "jp.classmethod.aws.lambda" version "0.38"
    id "net.ltgt.apt-eclipse" version "0.18"
    id "net.ltgt.apt-idea" version "0.18"
}

ext {
    micronautVersion = "1.1.0.M1"
}

version "0.1"
group "example.micronaut"

apply plugin:"application"
apply plugin:"java"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencyManagement {
    imports {
        mavenBom "io.micronaut:micronaut-bom:$micronautVersion"
    }
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    compile "io.micronaut:micronaut-function-aws"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compileOnly "io.micronaut:micronaut-inject-java"

    runtimeOnly "io.micronaut:micronaut-graal"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.amazonaws:aws-lambda-java-log4j2:1.0.0"
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:2.9.1"

    testCompile "io.micronaut:micronaut-function-client"
    testCompile "io.micronaut:micronaut-inject-java"
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-all:1.3"

    //tag::graaldependencies[]
    compileOnly "com.oracle.substratevm:svm"
    runtimeOnly "io.micronaut:micronaut-graal"
    //end::graaldependencies[]

    //tag::testdependencies[]
    testRuntime "io.micronaut:micronaut-http-server-netty"
    testRuntime "io.micronaut:micronaut-function-web"
    //end::testdependencies[]

    //tag::http-client[]
    compile "io.micronaut:micronaut-http-client"
    //end::http-client[]
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')
shadowJar {
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}
mainClassName = "io.micronaut.function.executor.FunctionApplication"
applicationDefaultJvmArgs = [""]

//tag::archivebasename[]
archivesBaseName = 'vies-vat-validator'
jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}
//end::archivebasename[]

if(new File("${System.getProperty("user.home")}/.aws/credentials").exists()) {
    task deploy(type: jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask, dependsOn: shadowJar) {
        functionName = "vies-vat-validator"
        handler = "io.micronaut.function.aws.MicronautRequestStreamHandler"
        role = "arn:aws:iam::${aws.accountId}:role/lambda_basic_execution"
        runtime = com.amazonaws.services.lambda.model.Runtime.Java8
        zipFile = shadowJar.archivePath
        memorySize = 256
        timeout = 60
    }

}
compileJava.options.compilerArgs += '-parameters'
compileTestJava.options.compilerArgs += '-parameters'

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
